<?php
/**
 * Class file for DirectSmileServiceGet
 * @date 02/08/2012
 */
/**
 * Class DirectSmileServiceGet
 * @date 02/08/2012
 */
class DirectSmileServiceGet extends DirectSmileWsdlClass
{
	/**
	 * Method to call GetInterfaceVersion
	 * Meta informations :
	 * 	- documentation : Returns the version of the DSMO webservice interface in Major.Minor.Revision format.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @param DirectSmileTypeGetInterfaceVersion GetInterfaceVersion
	 * @return DirectSmileTypeGetInterfaceVersionResponse
	 */
	public function GetInterfaceVersion(DirectSmileTypeGetInterfaceVersion $_DirectSmileTypeGetInterfaceVersion)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetInterfaceVersion(array()));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAuthenticationCode
	 * Meta informations :
	 * 	- documentation : Creates and returns an unique AuthenticationCode for a specific DirectSmile Online user. The returned Code can be passed to each method that method name ends with -Auth. You can call these methods directly without calling the Autenticate method upfront.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAuthenticationCode::getUsername()
	 * @uses DirectSmileTypeGetAuthenticationCode::getPassword()
	 * @param DirectSmileTypeGetAuthenticationCode GetAuthenticationCode
	 * @return DirectSmileTypeGetAuthenticationCodeResponse
	 */
	public function GetAuthenticationCode(DirectSmileTypeGetAuthenticationCode $_DirectSmileTypeGetAuthenticationCode)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAuthenticationCode(array('Username'=>$_DirectSmileTypeGetAuthenticationCode->getUsername(),'Password'=>$_DirectSmileTypeGetAuthenticationCode->getPassword())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAccountInfoDSM
	 * Meta informations :
	 * 	- documentation : Returns advanced LPM specific settings to an DSMO account.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAccountInfoDSM::getAccountID()
	 * @param DirectSmileTypeGetAccountInfoDSM GetAccountInfoDSM
	 * @return DirectSmileTypeGetAccountInfoDSMResponse
	 */
	public function GetAccountInfoDSM(DirectSmileTypeGetAccountInfoDSM $_DirectSmileTypeGetAccountInfoDSM)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAccountInfoDSM(array('AccountID'=>$_DirectSmileTypeGetAccountInfoDSM->getAccountID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetImage
	 * Meta informations :
	 * 	- documentation : Returns a byte array of an requested image. This is a synchronous call.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetImage::getSessionID()
	 * @uses DirectSmileTypeGetImage::getSetAlias()
	 * @uses DirectSmileTypeGetImage::getTextToRender()
	 * @uses DirectSmileTypeGetImage::getPixelWidth()
	 * @uses DirectSmileTypeGetImage::getFilename()
	 * @uses DirectSmileTypeGetImage::getQuality()
	 * @uses DirectSmileTypeGetImage::getKey()
	 * @uses DirectSmileTypeGetImage::getWaterMarkType()
	 * @param DirectSmileTypeGetImage GetImage
	 * @return DirectSmileTypeGetImageResponse
	 */
	public function GetImage(DirectSmileTypeGetImage $_DirectSmileTypeGetImage)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetImage(array('SessionID'=>$_DirectSmileTypeGetImage->getSessionID(),'SetAlias'=>$_DirectSmileTypeGetImage->getSetAlias(),'TextToRender'=>$_DirectSmileTypeGetImage->getTextToRender(),'PixelWidth'=>$_DirectSmileTypeGetImage->getPixelWidth(),'Filename'=>$_DirectSmileTypeGetImage->getFilename(),'Quality'=>$_DirectSmileTypeGetImage->getQuality(),'Key'=>$_DirectSmileTypeGetImage->getKey(),'WaterMarkType'=>$_DirectSmileTypeGetImage->getWaterMarkType())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetImageUrl
	 * Meta informations :
	 * 	- documentation : Returns an URL to a rendered image. This is a synchronous call.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetImageUrl::getSessionID()
	 * @uses DirectSmileTypeGetImageUrl::getSetAlias()
	 * @uses DirectSmileTypeGetImageUrl::getTextToRender()
	 * @uses DirectSmileTypeGetImageUrl::getPixelWidth()
	 * @uses DirectSmileTypeGetImageUrl::getFilename()
	 * @uses DirectSmileTypeGetImageUrl::getQuality()
	 * @uses DirectSmileTypeGetImageUrl::getKey()
	 * @uses DirectSmileTypeGetImageUrl::getWaterMarkType()
	 * @param DirectSmileTypeGetImageUrl GetImageUrl
	 * @return DirectSmileTypeGetImageUrlResponse
	 */
	public function GetImageUrl(DirectSmileTypeGetImageUrl $_DirectSmileTypeGetImageUrl)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetImageUrl(array('SessionID'=>$_DirectSmileTypeGetImageUrl->getSessionID(),'SetAlias'=>$_DirectSmileTypeGetImageUrl->getSetAlias(),'TextToRender'=>$_DirectSmileTypeGetImageUrl->getTextToRender(),'PixelWidth'=>$_DirectSmileTypeGetImageUrl->getPixelWidth(),'Filename'=>$_DirectSmileTypeGetImageUrl->getFilename(),'Quality'=>$_DirectSmileTypeGetImageUrl->getQuality(),'Key'=>$_DirectSmileTypeGetImageUrl->getKey(),'WaterMarkType'=>$_DirectSmileTypeGetImageUrl->getWaterMarkType())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetImageUrlAuth
	 * Meta informations :
	 * 	- documentation : Method is simular to the GetImageUrl, but You do not need to call the Authenticate method before you call this Method. Please pass only the AuthenticationCode. You can get an AuthenticationCode by calling the GetAuthenticationCode Method.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetImageUrlAuth::getAuthenticationCode()
	 * @uses DirectSmileTypeGetImageUrlAuth::getSetAlias()
	 * @uses DirectSmileTypeGetImageUrlAuth::getTextToRender()
	 * @uses DirectSmileTypeGetImageUrlAuth::getPixelWidth()
	 * @uses DirectSmileTypeGetImageUrlAuth::getFilename()
	 * @uses DirectSmileTypeGetImageUrlAuth::getQuality()
	 * @uses DirectSmileTypeGetImageUrlAuth::getWaterMarkType()
	 * @param DirectSmileTypeGetImageUrlAuth GetImageUrlAuth
	 * @return DirectSmileTypeGetImageUrlAuthResponse
	 */
	public function GetImageUrlAuth(DirectSmileTypeGetImageUrlAuth $_DirectSmileTypeGetImageUrlAuth)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetImageUrlAuth(array('AuthenticationCode'=>$_DirectSmileTypeGetImageUrlAuth->getAuthenticationCode(),'SetAlias'=>$_DirectSmileTypeGetImageUrlAuth->getSetAlias(),'TextToRender'=>$_DirectSmileTypeGetImageUrlAuth->getTextToRender(),'PixelWidth'=>$_DirectSmileTypeGetImageUrlAuth->getPixelWidth(),'Filename'=>$_DirectSmileTypeGetImageUrlAuth->getFilename(),'Quality'=>$_DirectSmileTypeGetImageUrlAuth->getQuality(),'WaterMarkType'=>$_DirectSmileTypeGetImageUrlAuth->getWaterMarkType())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetImageUrlDSM
	 * Meta informations :
	 * 	- documentation : DirectSmile internal method is simular to the GetImageUrl.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetImageUrlDSM::getAuthenticationCode()
	 * @uses DirectSmileTypeGetImageUrlDSM::getSetAlias()
	 * @uses DirectSmileTypeGetImageUrlDSM::getTextToRender()
	 * @uses DirectSmileTypeGetImageUrlDSM::getPixelWidth()
	 * @uses DirectSmileTypeGetImageUrlDSM::getFilename()
	 * @uses DirectSmileTypeGetImageUrlDSM::getQuality()
	 * @uses DirectSmileTypeGetImageUrlDSM::getWaterMarkType()
	 * @param DirectSmileTypeGetImageUrlDSM GetImageUrlDSM
	 * @return DirectSmileTypeGetImageUrlDSMResponse
	 */
	public function GetImageUrlDSM(DirectSmileTypeGetImageUrlDSM $_DirectSmileTypeGetImageUrlDSM)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetImageUrlDSM(array('AuthenticationCode'=>$_DirectSmileTypeGetImageUrlDSM->getAuthenticationCode(),'SetAlias'=>$_DirectSmileTypeGetImageUrlDSM->getSetAlias(),'TextToRender'=>$_DirectSmileTypeGetImageUrlDSM->getTextToRender(),'PixelWidth'=>$_DirectSmileTypeGetImageUrlDSM->getPixelWidth(),'Filename'=>$_DirectSmileTypeGetImageUrlDSM->getFilename(),'Quality'=>$_DirectSmileTypeGetImageUrlDSM->getQuality(),'WaterMarkType'=>$_DirectSmileTypeGetImageUrlDSM->getWaterMarkType())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetJobStatus
	 * Meta informations :
	 * 	- documentation : Returns the status of a backend JobOrder, requires a valid session.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetJobStatus::getSessionID()
	 * @uses DirectSmileTypeGetJobStatus::getJobID()
	 * @param DirectSmileTypeGetJobStatus GetJobStatus
	 * @return DirectSmileTypeGetJobStatusResponse
	 */
	public function GetJobStatus(DirectSmileTypeGetJobStatus $_DirectSmileTypeGetJobStatus)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetJobStatus(array('SessionID'=>$_DirectSmileTypeGetJobStatus->getSessionID(),'JobID'=>$_DirectSmileTypeGetJobStatus->getJobID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetJobStatusAuth
	 * Meta informations :
	 * 	- documentation : Returns the status of a backend JobOrder, requires an authenticationcode.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetJobStatusAuth::getAuthenticationCode()
	 * @uses DirectSmileTypeGetJobStatusAuth::getJobID()
	 * @param DirectSmileTypeGetJobStatusAuth GetJobStatusAuth
	 * @return DirectSmileTypeGetJobStatusAuthResponse
	 */
	public function GetJobStatusAuth(DirectSmileTypeGetJobStatusAuth $_DirectSmileTypeGetJobStatusAuth)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetJobStatusAuth(array('AuthenticationCode'=>$_DirectSmileTypeGetJobStatusAuth->getAuthenticationCode(),'JobID'=>$_DirectSmileTypeGetJobStatusAuth->getJobID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetJobStatusDSM
	 * Meta informations :
	 * 	- documentation : DirectSmile internal method, similar to GetjobStatus.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetJobStatusDSM::getAuthenticationCode()
	 * @uses DirectSmileTypeGetJobStatusDSM::getJobID()
	 * @param DirectSmileTypeGetJobStatusDSM GetJobStatusDSM
	 * @return DirectSmileTypeGetJobStatusDSMResponse
	 */
	public function GetJobStatusDSM(DirectSmileTypeGetJobStatusDSM $_DirectSmileTypeGetJobStatusDSM)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetJobStatusDSM(array('AuthenticationCode'=>$_DirectSmileTypeGetJobStatusDSM->getAuthenticationCode(),'JobID'=>$_DirectSmileTypeGetJobStatusDSM->getJobID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetJobStatusPercentDSM
	 * Meta informations :
	 * 	- documentation : Returns the progress of Backend JobOrder in percent. This method is depricated, because the GetJobStatus includes a Percent attribute now.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetJobStatusPercentDSM::getAuthenticationCode()
	 * @uses DirectSmileTypeGetJobStatusPercentDSM::getJobID()
	 * @param DirectSmileTypeGetJobStatusPercentDSM GetJobStatusPercentDSM
	 * @return DirectSmileTypeGetJobStatusPercentDSMResponse
	 */
	public function GetJobStatusPercentDSM(DirectSmileTypeGetJobStatusPercentDSM $_DirectSmileTypeGetJobStatusPercentDSM)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetJobStatusPercentDSM(array('AuthenticationCode'=>$_DirectSmileTypeGetJobStatusPercentDSM->getAuthenticationCode(),'JobID'=>$_DirectSmileTypeGetJobStatusPercentDSM->getJobID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableSetList
	 * Meta informations :
	 * 	- documentation : Returns a comma seperated list of available Sets. This function is depricated, please use the GetAvailableSetListXML instead. Requires a valid session.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableSetList::getSessionID()
	 * @param DirectSmileTypeGetAvailableSetList GetAvailableSetList
	 * @return DirectSmileTypeGetAvailableSetListResponse
	 */
	public function GetAvailableSetList(DirectSmileTypeGetAvailableSetList $_DirectSmileTypeGetAvailableSetList)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableSetList(array('SessionID'=>$_DirectSmileTypeGetAvailableSetList->getSessionID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableSetListAuth
	 * Meta informations :
	 * 	- documentation : Method is simular to the GetAvailableSetList, requires an authenticationcode.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableSetListAuth::getAuthenticationCode()
	 * @param DirectSmileTypeGetAvailableSetListAuth GetAvailableSetListAuth
	 * @return DirectSmileTypeGetAvailableSetListAuthResponse
	 */
	public function GetAvailableSetListAuth(DirectSmileTypeGetAvailableSetListAuth $_DirectSmileTypeGetAvailableSetListAuth)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableSetListAuth(array('AuthenticationCode'=>$_DirectSmileTypeGetAvailableSetListAuth->getAuthenticationCode())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableSetListDSM
	 * Meta informations :
	 * 	- documentation : DirectSmile internal method, simular to GetAvailableSetList.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableSetListDSM::getAuthenticationCode()
	 * @param DirectSmileTypeGetAvailableSetListDSM GetAvailableSetListDSM
	 * @return DirectSmileTypeGetAvailableSetListDSMResponse
	 */
	public function GetAvailableSetListDSM(DirectSmileTypeGetAvailableSetListDSM $_DirectSmileTypeGetAvailableSetListDSM)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableSetListDSM(array('AuthenticationCode'=>$_DirectSmileTypeGetAvailableSetListDSM->getAuthenticationCode())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableSetListXML
	 * Meta informations :
	 * 	- documentation : Generates a xml based list of available DirectSmile Sets, requires a valid session.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableSetListXML::getSessionID()
	 * @param DirectSmileTypeGetAvailableSetListXML GetAvailableSetListXML
	 * @return DirectSmileTypeGetAvailableSetListXMLResponse
	 */
	public function GetAvailableSetListXML(DirectSmileTypeGetAvailableSetListXML $_DirectSmileTypeGetAvailableSetListXML)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableSetListXML(array('SessionID'=>$_DirectSmileTypeGetAvailableSetListXML->getSessionID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableSetListXMLAuth
	 * Meta informations :
	 * 	- documentation : Generates a xml based list of available DirectSmile Sets.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableSetListXMLAuth::getAuthenticationCode()
	 * @param DirectSmileTypeGetAvailableSetListXMLAuth GetAvailableSetListXMLAuth
	 * @return DirectSmileTypeGetAvailableSetListXMLAuthResponse
	 */
	public function GetAvailableSetListXMLAuth(DirectSmileTypeGetAvailableSetListXMLAuth $_DirectSmileTypeGetAvailableSetListXMLAuth)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableSetListXMLAuth(array('AuthenticationCode'=>$_DirectSmileTypeGetAvailableSetListXMLAuth->getAuthenticationCode())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableSetListXMLDSM
	 * Meta informations :
	 * 	- documentation : DirectSmile internal method, similar to GetAvailableSetListXML.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableSetListXMLDSM::getAuthenticationCode()
	 * @param DirectSmileTypeGetAvailableSetListXMLDSM GetAvailableSetListXMLDSM
	 * @return DirectSmileTypeGetAvailableSetListXMLDSMResponse
	 */
	public function GetAvailableSetListXMLDSM(DirectSmileTypeGetAvailableSetListXMLDSM $_DirectSmileTypeGetAvailableSetListXMLDSM)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableSetListXMLDSM(array('AuthenticationCode'=>$_DirectSmileTypeGetAvailableSetListXMLDSM->getAuthenticationCode())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableDocList
	 * Meta informations :
	 * 	- documentation : Returns a xml based list of available documents, including urls to thumbnails and datainterfaces.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableDocList::getSessionID()
	 * @param DirectSmileTypeGetAvailableDocList GetAvailableDocList
	 * @return DirectSmileTypeGetAvailableDocListResponse
	 */
	public function GetAvailableDocList(DirectSmileTypeGetAvailableDocList $_DirectSmileTypeGetAvailableDocList)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableDocList(array('SessionID'=>$_DirectSmileTypeGetAvailableDocList->getSessionID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableDocListDSM
	 * Meta informations :
	 * 	- documentation : DirectSmile internal method, similar to GetAvailableDocList.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableDocListDSM::getAuthenticationCode()
	 * @param DirectSmileTypeGetAvailableDocListDSM GetAvailableDocListDSM
	 * @return DirectSmileTypeGetAvailableDocListDSMResponse
	 */
	public function GetAvailableDocListDSM(DirectSmileTypeGetAvailableDocListDSM $_DirectSmileTypeGetAvailableDocListDSM)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableDocListDSM(array('AuthenticationCode'=>$_DirectSmileTypeGetAvailableDocListDSM->getAuthenticationCode())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableDocListAuth
	 * Meta informations :
	 * 	- documentation : Returns a xml based list of available documents, including urls to thumbnails and datainterfaces. Requires authenticationcode
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableDocListAuth::getAuthenticationCode()
	 * @param DirectSmileTypeGetAvailableDocListAuth GetAvailableDocListAuth
	 * @return DirectSmileTypeGetAvailableDocListAuthResponse
	 */
	public function GetAvailableDocListAuth(DirectSmileTypeGetAvailableDocListAuth $_DirectSmileTypeGetAvailableDocListAuth)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableDocListAuth(array('AuthenticationCode'=>$_DirectSmileTypeGetAvailableDocListAuth->getAuthenticationCode())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetDocStatus
	 * Meta informations :
	 * 	- documentation : Returns a serialized DocStatusReport object, which contains progress information of the processing of document request. Requires a valid session.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetDocStatus::getSessionID()
	 * @uses DirectSmileTypeGetDocStatus::getKey()
	 * @param DirectSmileTypeGetDocStatus GetDocStatus
	 * @return DirectSmileTypeGetDocStatusResponse
	 */
	public function GetDocStatus(DirectSmileTypeGetDocStatus $_DirectSmileTypeGetDocStatus)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetDocStatus(array('SessionID'=>$_DirectSmileTypeGetDocStatus->getSessionID(),'Key'=>$_DirectSmileTypeGetDocStatus->getKey())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetDocStatusDSM
	 * Meta informations :
	 * 	- documentation : DirectSmile internal method, similar to GetDoStatus.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetDocStatusDSM::getAuthenticationCode()
	 * @uses DirectSmileTypeGetDocStatusDSM::getKey()
	 * @param DirectSmileTypeGetDocStatusDSM GetDocStatusDSM
	 * @return DirectSmileTypeGetDocStatusDSMResponse
	 */
	public function GetDocStatusDSM(DirectSmileTypeGetDocStatusDSM $_DirectSmileTypeGetDocStatusDSM)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetDocStatusDSM(array('AuthenticationCode'=>$_DirectSmileTypeGetDocStatusDSM->getAuthenticationCode(),'Key'=>$_DirectSmileTypeGetDocStatusDSM->getKey())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetDocDataInterfaceURL
	 * Meta informations :
	 * 	- documentation : Returns an URL to the Interface description of a DirectSmile Document. Reuqires a valid session.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetDocDataInterfaceURL::getSessionID()
	 * @uses DirectSmileTypeGetDocDataInterfaceURL::getDocumentAlias()
	 * @param DirectSmileTypeGetDocDataInterfaceURL GetDocDataInterfaceURL
	 * @return DirectSmileTypeGetDocDataInterfaceURLResponse
	 */
	public function GetDocDataInterfaceURL(DirectSmileTypeGetDocDataInterfaceURL $_DirectSmileTypeGetDocDataInterfaceURL)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetDocDataInterfaceURL(array('SessionID'=>$_DirectSmileTypeGetDocDataInterfaceURL->getSessionID(),'DocumentAlias'=>$_DirectSmileTypeGetDocDataInterfaceURL->getDocumentAlias())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableDhttList
	 * Meta informations :
	 * 	- documentation : Generates a commaseperated list of available LandingPage templates. This function is deprecated, please use the GetAvailableDhttListXML instead. The SessionID is included to stay backward compatible, it is not used in the method.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableDhttList::getSessionID()
	 * @param DirectSmileTypeGetAvailableDhttList GetAvailableDhttList
	 * @return DirectSmileTypeGetAvailableDhttListResponse
	 */
	public function GetAvailableDhttList(DirectSmileTypeGetAvailableDhttList $_DirectSmileTypeGetAvailableDhttList)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableDhttList(array('SessionID'=>$_DirectSmileTypeGetAvailableDhttList->getSessionID())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetAvailableDhttListAuth
	 * Meta informations :
	 * 	- documentation : Method is simular to the GetAvailableDhttListAuth, but You do not need to call the Authenticate method before you call this Method. Please pass only the AuthenticationCode. You can get an AuthenticationCode by calling the GetAuthenticationCode Method.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetAvailableDhttListAuth::getAuthenticationCode()
	 * @param DirectSmileTypeGetAvailableDhttListAuth GetAvailableDhttListAuth
	 * @return DirectSmileTypeGetAvailableDhttListAuthResponse
	 */
	public function GetAvailableDhttListAuth(DirectSmileTypeGetAvailableDhttListAuth $_DirectSmileTypeGetAvailableDhttListAuth)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetAvailableDhttListAuth(array('AuthenticationCode'=>$_DirectSmileTypeGetAvailableDhttListAuth->getAuthenticationCode())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetDocAttributes
	 * Meta informations :
	 * 	- documentation : Returns extended attributes of a DirectSmile Document.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @uses DirectSmileTypeGetDocAttributes::getSID()
	 * @uses DirectSmileTypeGetDocAttributes::getDocumentAlias()
	 * @param DirectSmileTypeGetDocAttributes GetDocAttributes
	 * @return DirectSmileTypeGetDocAttributesResponse
	 */
	public function GetDocAttributes(DirectSmileTypeGetDocAttributes $_DirectSmileTypeGetDocAttributes)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetDocAttributes(array('SID'=>$_DirectSmileTypeGetDocAttributes->getSID(),'DocumentAlias'=>$_DirectSmileTypeGetDocAttributes->getDocumentAlias())));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
	/**
	 * Method to call GetGeneratorSystemInfo
	 * Meta informations :
	 * 	- documentation : Returns information about the Generator, like the SystemID and available licenses, in XML format.
	 * @uses DirectSmileWsdlClass::getSoapClient()
	 * @uses DirectSmileWsdlClass::setResult()
	 * @uses DirectSmileWsdlClass::getResult()
	 * @uses DirectSmileWsdlClass::saveLastError()
	 * @param DirectSmileTypeGetGeneratorSystemInfo GetGeneratorSystemInfo
	 * @return DirectSmileTypeGetGeneratorSystemInfoResponse
	 */
	public function GetGeneratorSystemInfo(DirectSmileTypeGetGeneratorSystemInfo $_DirectSmileTypeGetGeneratorSystemInfo)
	{
		try
		{
			$this->setResult(self::getSoapClient()->GetGeneratorSystemInfo(array()));
		}
		catch(SoapFault $fault)
		{
			return !$this->saveLastError(__METHOD__,$fault);
		}
		return $this->getResult();
	}
